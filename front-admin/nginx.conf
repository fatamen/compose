user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush      on;

    keepalive_timeout  65;

    #gzip  on;

    # =========================================================
    # HTTP (80 埠) Server 區塊，用於重定向到 HTTPS
    # 此服務監聽 HTTP 請求，並將它們重定向到 HTTPS。
    # =========================================================
    server {
        listen        80;
        listen  [::]:80;
        server_name  192.168.36.62; # <<< 請替換為您的實際 IP 地址或域名 (例如: your-domain.com)

        # 將所有 HTTP 請求重定向到 HTTPS
        return 301 https://$host$request_uri;
    }


    # =========================================================
    # HTTPS (443 埠) Server 區塊
    # 此服務將透過 HTTPS 提供您的前端應用程式。
    # =========================================================
    server {
        listen        443 ssl; # 監聽 443 埠，並啟用 SSL
        listen  [::]:443 ssl;
        server_name  192.168.36.62; # <<< 請替換為您的實際 IP 地址或域名 (例如: your-domain.com)

        # --- SSL 憑證路徑 ---
        ssl_certificate     /etc/nginx/certs/certificate.crt; # 憑證文件
        ssl_certificate_key /etc/nginx/certs/private.key;    # 私鑰文件

        # --- 基本 SSL 配置 ---
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256";
        ssl_prefer_server_ciphers on;

        # --- API 反向代理設定 (新增 CORS 處理) ---
        location /api/ {
            proxy_pass http://java:8080; # 'java' 是 Docker Compose 服務名稱
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 處理跨域請求的預檢 (OPTIONS)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            add_header 'Access-Control-Allow-Origin' '*'; # 允許所有來源，生產環境請限制
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        # --- 前端網站檔案根目錄設定 ---
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # --- 錯誤頁面設定 ---
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # 您原有的 6173 埠 Server (可選，但建議移除或修改)
    # 如果您不希望這個埠同時提供服務，或不確定，可以先註釋掉或移除。
    server {
        listen         6173; # 監聽 docker 內部的 port IPv4
        listen  [::]:6173;   # 監聽 docker 內部的 port IPv6
        server_name  localhost; # 這裡的 localhost 僅在容器內部有效

        location /api/ {
            proxy_pass http://java:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 處理跨域請求的預檢 (OPTIONS)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            add_header 'Access-Control-Allow-Origin' '*'; # 允許所有來源，生產環境請限制
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        }

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        error_page    500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
